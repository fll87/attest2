<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qzt.module.system.mapper.SysUserMapper">

    <resultMap type="SysUser" id="SysUserResult">
        <id     property="userId"       column="user_id"      />
        <result property="username"     column="username"    />
        <result property="nickname"     column="nickname"    />
        <result property="email"        column="email"        />
        <result property="mobile"       column="mobile"  />
        <result property="sex"          column="sex"          />
        <result property="avatar"       column="avatar"       />
        <result property="password"     column="password"     />
        <result property="status"       column="status"       />
        <result property="deleted"      column="deleted"     />
        <result property="loginIp"      column="login_ip"     />
        <result property="loginDate"    column="login_date"   />
        <result property="creator"     column="creator"    />
        <result property="createTime"   column="create_time"  />
        <result property="updater"     column="updater"    />
        <result property="updateTime"   column="update_time"  />
        <result property="remark"       column="remark"       />
        <result property="userType"       column="user_type"       />
        <result property="pwdUpdateTime"       column="pwd_update_time"       />

        <collection  property="roles"   javaType="java.util.List"           resultMap="RoleResult" />
    </resultMap>

    <resultMap id="RoleResult" type="SysRole">
        <id     property="roleId"       column="role_id"        />
        <result property="roleName"     column="role_name"      />
        <result property="roleKey"      column="role_key"       />
        <result property="roleSort"     column="role_sort"      />
        <result property="dataScope"     column="data_scope"    />
        <result property="status"       column="role_status"    />
    </resultMap>

	<sql id="selectUserVo">
        select u.user_id, u.username, u.nickname, u.email, u.avatar, u.mobile, u.password, u.sex, u.status, u.deleted, u.login_ip, u.login_date, u.creator, u.create_time, u.remark, u.pwd_update_time, u.user_type,
        r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status
        from sys_user u
		left join sys_user_role ur on u.user_id = ur.user_id
		left join sys_role r on r.role_id = ur.role_id
    </sql>

    <select id="selectUserList" parameterType="SysUser" resultMap="SysUserResult">
		select u.user_id, u.nickname, u.username, u.email, u.avatar, u.mobile, u.sex, u.status, u.login_ip, u.login_date, u.pwd_update_time, u.user_type, u.creator, u.create_time, u.remark from sys_user u
		where u.deleted = '0'
		<if test="userId != null and userId != 0">
			AND u.user_id = #{userId}
		</if>
		<if test="userType != null">
			AND u.user_type = #{userType}
		</if>
		<if test="username != null and username != ''">
			AND u.username like concat('%', #{username}, '%')
		</if>
		<if test="nickname != null and nickname != ''">
			AND u.nickname like concat('%', #{nickname}, '%')
		</if>
		<if test="status != null ">
			AND u.status = #{status}
		</if>
		<if test="mobile != null and mobile != ''">
			AND u.mobile like concat('%', #{mobile}, '%')
		</if>
		<if test="email != null and email != ''">
			AND u.email like concat('%', #{email}, '%')
		</if>
		<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
			AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
		</if>
		<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
			AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>

	<select id="selectAllocatedList" parameterType="SysUser" resultMap="SysUserResult">
	    select distinct u.user_id, u.username, u.nickname, u.email, u.mobile, u.status, u.create_time
	    from sys_user u
			 left join sys_user_role ur on u.user_id = ur.user_id
			 left join sys_role r on r.role_id = ur.role_id
	    where u.deleted = '0' and r.role_id = #{roleId}
	    <if test="username != null and username != ''">
			AND u.username like concat('%', #{username}, '%')
		</if>
		<if test="mobile != null and mobile != ''">
			AND u.mobile like concat('%', #{mobile}, '%')
		</if>
		<if test="userType != null">
			AND u.user_type = #{userType}
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>

	<select id="selectUnallocatedList" parameterType="SysUser" resultMap="SysUserResult">
	    select distinct u.user_id, u.username, u.nickname, u.email, u.mobile, u.status, u.create_time
	    from sys_user u
			 left join sys_user_role ur on u.user_id = ur.user_id
			 left join sys_role r on r.role_id = ur.role_id
	    where u.deleted = '0' and (r.role_id != #{roleId} or r.role_id IS NULL)
	    and u.user_id not in (select u.user_id from sys_user u inner join sys_user_role ur on u.user_id = ur.user_id and ur.role_id = #{roleId})
	    <if test="username != null and username != ''">
			AND u.username like concat('%', #{username}, '%')
		</if>
		<if test="mobile != null and mobile != ''">
			AND u.mobile like concat('%', #{mobile}, '%')
		</if>
		<if test="userType != null">
			AND u.user_type = #{userType}
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>

	<select id="selectUserByUsername" parameterType="String" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.username = #{username} or u.mobile = #{username} or u.email = #{username} and u.deleted = '0'
	</select>

	<select id="selectUserExits" parameterType="String" resultMap="SysUserResult">
		select u.user_id, u.username, u.nickname, u.email, u.mobile, u.status, u.create_time from sys_user u
		where u.username = #{username} or u.mobile = #{username} or u.email = #{username} and u.deleted = '0'
	</select>

	<select id="selectUserUnique" parameterType="String" resultMap="SysUserResult">
		select u.user_id, u.username, u.nickname, u.email, u.mobile, u.status, u.create_time from sys_user u
		where u.deleted = '0' AND
			(u.username = #{username} OR u.mobile = #{username} OR u.email = #{username})
            OR (u.username = #{mobile} OR u.mobile = #{mobile} OR u.email = #{mobile})
            OR (u.username = #{email} OR u.mobile = #{email} OR u.email = #{email})
	</select>

	<select id="selectUserById" parameterType="Long" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.user_id = #{userId}
	</select>

	<select id="selectByUsername" parameterType="String" resultMap="SysUserResult">
		select user_id, username from sys_user where username = #{username} and deleted = '0' limit 1
	</select>

	<select id="selectByMobile" parameterType="String" resultMap="SysUserResult">
		select user_id, mobile from sys_user where mobile = #{mobile} and deleted = '0' limit 1
	</select>

	<select id="selectByEmail" parameterType="String" resultMap="SysUserResult">
		select user_id, email from sys_user where email = #{email} and deleted = '0' limit 1
	</select>

	<insert id="insertUser" parameterType="SysUser" useGeneratedKeys="true" keyProperty="userId">
 		insert into sys_user(
 			<if test="userId != null and userId != 0">user_id,</if>
 			<if test="username != null and username != ''">username,</if>
 			<if test="nickname != null and nickname != ''">nickname,</if>
 			<if test="email != null and email != ''">email,</if>
 			<if test="avatar != null and avatar != ''">avatar,</if>
 			<if test="mobile != null and mobile != ''">mobile,</if>
 			<if test="sex != null ">sex,</if>
 			<if test="password != null and password != ''">password,</if>
 			<if test="status != null">status,</if>
 			<if test="creator != null and creator != ''">creator,</if>
 			<if test="remark != null and remark != ''">remark,</if>
			<if test="userType != null">user_type,</if>
 			create_time
 		)values(
 			<if test="userId != null and userId != ''">#{userId},</if>
 			<if test="username != null and username != ''">#{username},</if>
 			<if test="nickname != null and nickname != ''">#{nickname},</if>
 			<if test="email != null and email != ''">#{email},</if>
 			<if test="avatar != null and avatar != ''">#{avatar},</if>
 			<if test="mobile != null and mobile != ''">#{mobile},</if>
 			<if test="sex != null ">#{sex},</if>
 			<if test="password != null and password != ''">#{password},</if>
 			<if test="status != null">#{status},</if>
 			<if test="creator != null and creator != ''">#{creator},</if>
 			<if test="remark != null and remark != ''">#{remark},</if>
			<if test="userType != null">#{userType},</if>
 			now()
 		)
	</insert>

	<update id="updateUser" parameterType="SysUser">
 		update sys_user
 		<set>
 			<if test="username != null and username != ''">username = #{username},</if>
 			<if test="nickname != null and nickname != ''">nickname = #{nickname},</if>
 			<if test="email != null ">email = #{email},</if>
 			<if test="mobile != null ">mobile = #{mobile},</if>
 			<if test="sex != null ">sex = #{sex},</if>
 			<if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
 			<if test="password != null and password != ''">password = #{password},</if>
 			<if test="status != null ">status = #{status},</if>
 			<if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
 			<if test="loginDate != null">login_date = #{loginDate},</if>
 			<if test="updater != null and updater != ''">updater = #{updater},</if>
 			<if test="remark != null">remark = #{remark},</if>
 		    <if test="pwdUpdateTime != null">pwd_update_time = #{pwdUpdateTime},</if>
 			update_time = now()
 		</set>
 		where user_id = #{userId}
	</update>

	<update id="updateUserStatus" parameterType="SysUser">
 		update sys_user set status = #{status} where user_id = #{userId}
	</update>

	<update id="updateUserAvatar" parameterType="SysUser">
 		update sys_user set avatar = #{avatar} where username = #{username}
	</update>

	<update id="resetUserPwd" parameterType="SysUser">
 		update sys_user set password = #{password},pwd_update_time = now() where user_id = #{userId}
	</update>

	<delete id="deleteUserById" parameterType="Long">
 		update sys_user set deleted = '2' where user_id = #{userId}
 	</delete>

 	<delete id="deleteUserByIds" parameterType="Long">
 		update sys_user set deleted = '2' where user_id in
 		<foreach collection="array" item="userId" open="(" separator="," close=")">
 			#{userId}
        </foreach>
 	</delete>

</mapper>
