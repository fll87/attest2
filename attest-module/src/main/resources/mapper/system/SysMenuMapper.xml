<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qzt.module.system.mapper.SysMenuMapper">

	<resultMap type="SysMenu" id="SysMenuResult">
		<result property="menuId"    column="menu_id"    />
		<result property="menuName"    column="menu_name"    />
		<result property="perms"    column="perms"    />
		<result property="menuType"    column="menu_type"    />
		<result property="orderNum"    column="order_num"    />
		<result property="parentId"    column="parent_id"    />
		<result property="path"    column="path"    />
		<result property="outerChain"    column="outer_chain"    />
		<result property="icon"    column="icon"    />
		<result property="status"    column="status"    />
		<result property="visible"    column="visible"    />
		<result property="creator"    column="creator"    />
		<result property="createTime"    column="create_time"    />
		<result property="updater"    column="updater"    />
		<result property="updateTime"    column="update_time"    />
	</resultMap>

	<sql id="selectMenuVo">
		select menu_id, menu_name, perms, menu_type, order_num, parent_id, path, outer_chain, icon, status, visible, creator, create_time, updater, update_time from sys_menu
	</sql>

    <select id="selectMenuList" parameterType="SysMenu" resultMap="SysMenuResult">
		<include refid="selectMenuVo"/>
		<where>
			deleted = 0
			<if test="menuName != null and menuName != ''">
				AND menu_name like concat('%', #{menuName}, '%')
			</if>
			<if test="visible != null and visible != ''">
				AND visible = #{visible}
			</if>
			<if test="status != null and status != ''">
				AND status = #{status}
			</if>
		</where>
		order by parent_id, order_num
	</select>

	<select id="selectMenuTreeAll" resultMap="SysMenuResult">
		select distinct m.menu_id, m.menu_name, COALESCE(m.perms,'') as perms, m.menu_type,
		m.order_num, m.parent_id, m.path, m.outer_chain, m.icon, m.status, m.visible, m.create_time
		from sys_menu m where m.menu_type in ('M', 'C') and m.status = 0
		order by m.parent_id, m.order_num
	</select>

	<select id="selectMenuListByUserId" parameterType="SysMenu" resultMap="SysMenuResult">
		select distinct m.menu_id, m.menu_name, COALESCE(m.perms,'') as perms, m.menu_type,
		m.order_num, m.parent_id, m.path, m.outer_chain, m.icon, m.status, m.visible, m.create_time
		from sys_menu m
		left join sys_role_menu rm on m.menu_id = rm.menu_id
		left join sys_user_role ur on rm.role_id = ur.role_id
		left join sys_role ro on ur.role_id = ro.role_id
		where ur.user_id = #{params.userId}
		<if test="menuName != null and menuName != ''">
            AND m.menu_name like concat('%', #{menuName}, '%')
		</if>
		<if test="visible != null and visible != ''">
            AND m.visible = #{visible}
		</if>
		<if test="status != null and status != ''">
            AND m.status = #{status}
		</if>
		order by m.parent_id, m.order_num
	</select>

    <select id="selectMenuTreeByUserId" parameterType="Long" resultMap="SysMenuResult">
		select distinct m.menu_id, m.menu_name, COALESCE(m.perms,'') as perms, m.menu_type,
						m.order_num, m.parent_id, m.path, m.outer_chain, m.icon, m.status, m.visible, m.create_time
		from sys_menu m
			 left join sys_role_menu rm on m.menu_id = rm.menu_id
			 left join sys_user_role ur on rm.role_id = ur.role_id
			 left join sys_role ro on ur.role_id = ro.role_id
			 left join sys_user u on ur.user_id = u.user_id
		where u.user_id = #{userId} and m.menu_type in ('M', 'C') and m.status = 0  AND ro.status = 0
		order by m.parent_id, m.order_num
	</select>

	<select id="selectMenuListByRoleId" resultType="Long">
		select m.menu_id
		from sys_menu m
            left join sys_role_menu rm on m.menu_id = rm.menu_id
        where rm.role_id = #{roleId}
		order by m.parent_id, m.order_num
	</select>

	<select id="selectMenuPermsByUserId" parameterType="Long" resultType="String">
		select distinct m.perms
		from sys_menu m
			 left join sys_role_menu rm on m.menu_id = rm.menu_id
			 left join sys_user_role ur on rm.role_id = ur.role_id
			 left join sys_role r on r.role_id = ur.role_id
		where m.status = '0' and r.status = '0' and ur.user_id = #{userId}
	</select>

	<select id="selectMenuPermsByRoleId" parameterType="Long" resultType="String">
		select distinct m.perms
		from sys_menu m
			 left join sys_role_menu rm on m.menu_id = rm.menu_id
		where m.status = '0' and rm.role_id = #{roleId}
	</select>

	<select id="selectMenuById" parameterType="Long" resultMap="SysMenuResult">
		<include refid="selectMenuVo"/>
		where menu_id = #{menuId}
	</select>

	<select id="hasChildByMenuId" resultType="Integer">
	    select count(1) from sys_menu where parent_id = #{menuId}
	</select>

	<select id="checkMenuNameUnique" parameterType="SysMenu" resultMap="SysMenuResult">
		<include refid="selectMenuVo"/>
		where menu_name=#{menuName} and parent_id = #{parentId} limit 1
	</select>

	<update id="updateMenu" parameterType="SysMenu">
		update sys_menu
		<set>
			<if test="menuName != null and menuName != ''">menu_name = #{menuName},</if>
			<if test="perms != null and perms != ''">perms = #{perms},</if>
			<if test="menuType != null and menuType != ''">menu_type = #{menuType},</if>
			<if test="orderNum != null">order_num = #{orderNum},</if>
			<if test="parentId != null">parent_id = #{parentId},</if>
			<if test="path != null">path = #{path},</if>
			<if test="outerChain != null and outerChain != ''">outer_chain = #{outerChain},</if>
			<if test="icon != null">icon = #{icon},</if>
			<if test="status != null">status = #{status},</if>
			<if test="visible != null and visible != ''">visible = #{visible},</if>
			<if test="updater != null">updater = #{updater},</if>
			update_time = now()
		</set>
		where menu_id = #{menuId}
	</update>

	<insert id="insertMenu" parameterType="SysMenu" useGeneratedKeys="true" keyProperty="menuId">
	insert into sys_menu
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="menuName != null and menuName != ''">menu_name,</if>
			<if test="perms != null and perms != ''">perms,</if>
			<if test="menuType != null and menuType != ''">menu_type,</if>
			<if test="orderNum != null">order_num,</if>
			<if test="parentId != null">parent_id,</if>
			<if test="path != null">path,</if>
			<if test="outerChain != null and outerChain != ''">outer_chain,</if>
			<if test="icon != null">icon,</if>
			<if test="status != null">status,</if>
			<if test="visible != null and visible != ''">visible,</if>
			<if test="creator != null">creator,</if>
			create_time,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="menuName != null and menuName != ''">#{menuName},</if>
			<if test="perms != null and perms != ''">#{perms},</if>
			<if test="menuType != null and menuType != ''">#{menuType},</if>
			<if test="orderNum != null">#{orderNum},</if>
			<if test="parentId != null">#{parentId},</if>
			<if test="path != null">#{path},</if>
			<if test="outerChain != null and outerChain != ''">#{outerChain},</if>
			<if test="icon != null">#{icon},</if>
			<if test="status != null">#{status},</if>
			<if test="visible != null and visible != ''">#{visible},</if>
			<if test="creator != null">#{creator},</if>
			now(),
		</trim>
	</insert>

	<delete id="deleteMenuById" parameterType="Long">
	    delete from sys_menu where menu_id = #{menuId}
	</delete>

</mapper>
